{
  "version": 3,
  "sources": ["../../../../src/boosters/lucky/LuckyBooster.ts"],
  "sourcesContent": ["import {IInventory, ILuckBoosterSettings} from \"../../../src/type\";\nimport {RARITY_NAMES} from \"../../enum\";\nimport {nextRarity, prevRarity} from \"../../helpers\";\nimport {Item} from \"../../Item/Item\";\nimport {Booster} from \"../base/BoosterBase\";\n\nexport class LuckyBooster extends Booster {\n    replacementChance: number;\n    constructor(settings: ILuckBoosterSettings) {\n        super(settings);\n        this.replacementChance = settings.replacementChance;\n    }\n\n    checkReplacementChanceByRarity(): boolean {\n        const shiftChance = {\n            [RARITY_NAMES.COMMON]: 1,\n            [RARITY_NAMES.RARE]: 1,\n            [RARITY_NAMES.EPIC]: 10,\n            [RARITY_NAMES.LEGENDARY]: 100,\n        }\n        const randomInt =  Math.floor(Math.random() * 100) + 1; \n        const chance = this.replacementChance * 100;\n\n        return  randomInt < (chance / shiftChance[this.rarity]);\n    }\n\n    getBoosterLoot(playerInventory?: IInventory): Item[] {\n        let result = [];\n        if (this.n1) {\n            for (let i = 0; i < this.n1; i++) {\n                const haveReplacement = this.checkReplacementChanceByRarity();\n                const item = this.getRandomItem(haveReplacement ? nextRarity[this.rarity] : this.rarity)\n                result.push(item)\n            }\n        }\n        if (this.n2) {\n            for (let i = 0; i < this.n2; i++) {\n                const rarity = prevRarity[this.rarity];\n                const haveReplacement = this.checkReplacementChanceByRarity()\n                const item = this.getRandomItem(haveReplacement ? nextRarity[this.rarity] : rarity)\n                result.push(item)\n            }\n        }\n        return result;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAA2B;AAC3B,qBAAqC;AAErC,yBAAsB;AAEf,MAAM,qBAAqB,2BAAQ;AAAA,EAEtC,YAAY,UAAgC;AACxC,UAAM,QAAQ;AACd,SAAK,oBAAoB,SAAS;AAAA,EACtC;AAAA,EAEA,iCAA0C;AACtC,UAAM,cAAc;AAAA,MAChB,CAAC,yBAAa,SAAS;AAAA,MACvB,CAAC,yBAAa,OAAO;AAAA,MACrB,CAAC,yBAAa,OAAO;AAAA,MACrB,CAAC,yBAAa,YAAY;AAAA,IAC9B;AACA,UAAM,YAAa,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG,IAAI;AACrD,UAAM,SAAS,KAAK,oBAAoB;AAExC,WAAQ,YAAa,SAAS,YAAY,KAAK;AAAA,EACnD;AAAA,EAEA,eAAe,iBAAsC;AACjD,QAAI,SAAS,CAAC;AACd,QAAI,KAAK,IAAI;AACT,eAAS,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK;AAC9B,cAAM,kBAAkB,KAAK,+BAA+B;AAC5D,cAAM,OAAO,KAAK,cAAc,kBAAkB,0BAAW,KAAK,UAAU,KAAK,MAAM;AACvF,eAAO,KAAK,IAAI;AAAA,MACpB;AAAA,IACJ;AACA,QAAI,KAAK,IAAI;AACT,eAAS,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK;AAC9B,cAAM,SAAS,0BAAW,KAAK;AAC/B,cAAM,kBAAkB,KAAK,+BAA+B;AAC5D,cAAM,OAAO,KAAK,cAAc,kBAAkB,0BAAW,KAAK,UAAU,MAAM;AAClF,eAAO,KAAK,IAAI;AAAA,MACpB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
